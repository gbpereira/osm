
<%# encoding: utf-8 %>

var DOM = {}

$(document).ready(function() {
  DOM.DEFAULT_LAT = -23.533773;
  DOM.DEFAULT_LNG = -46.625290;
  DOM.DEFAULT_ZOOM = 4;
  DOM.form = $('#map-form');

  DOM.map = new RMMap('map', DOM.DEFAULT_LAT, DOM.DEFAULT_LNG, DOM.DEFAULT_ZOOM);
  DOM.route = new RMRoute([]);

  // DOM.RMGeocoder = new RMGeocoder();
  // DOM.routeLayer = null;
  // DOM.locationLayer = null;
  DOM.marker = null;

  function _init () {
    DOM.route.addTo(DOM.map);
  }

  function _events () {
    DOM.form.on('change', '[data-marker-input]', function (aEvent) {
      _findGeolocalization($(this).parent().parent(), _addMarkers);
      // DOM.RMGeocoder.call($(this).parent().parent(), _addMarkers);
    });

    DOM.form.on('change', '[data-route-input]', function (aEvent) {
      _findGeolocalization($(this).parent().parent(), _traceRoute);
      // DOM.RMGeocoder.call($(this).parent().parent(), _traceRoute);
    });

    DOM.form.on('click', '[data-marker-remove]', function (aEvent) {
      DOM.map.removeLayer(DOM.marker);
    });
    // DOM.form.on('click', '[data-route-create]', function (aEvent) {
    //   _traceRoute();
    // });
  };

  // function _appendResultData (data) {
  //
  // }

  function _findGeolocalization (parent, callback) {
    var locationItemLat = parent.find('[data-lat]'),
        locationItemLng = parent.find('[data-lng]'),
        locationItemAddress = parent.find('[data-location-name]'),
        data = { search: locationItemAddress.val() },
        url = "/api/v1/geocoder";

    $.ajax({
      type: 'GET',
      data: data,
      url: url,
      dataType: 'json',
      success: function(data) {
        var status = data['status'];

        if (status == "success") {
          var result = data['data'];
          var location = result['geometry']['location'];
          var locationFormatted = result['formatted_address'];

          locationItemLat.val(location.lat);
          locationItemLng.val(location.lng);
          locationItemAddress.val(locationFormatted);

          callback();
        }
      }
    })
  };

  function _traceRoute () {
    var waypoints = [];

    DOM.form.find('[data-route]').each(function () {
      var that = $(this),
          lat = that.find('[data-lat]').val(),
          lng = that.find('[data-lng]').val(),
          locationName = that.find('[data-location-name]').val();

      if (lat !== '' && lng !== '') {
        waypoints.push({latLng: L.latLng(lat, lng), name: locationName});
      };
    });

    DOM.route.setWaypoints(waypoints);
    // console.log(DOM.route._selectedRoute.summary.totalDistance / 1000);
    // console.log(DOM.route._selectedRoute.summary.totalTime / 60);
  };

  function _addMarkers () {
    var waypoints = [];

    DOM.form.find('[data-marker]').each(function (aIndex) {
      var that = $(this),
          lat = that.find('[data-lat]').val(),
          lng = that.find('[data-lng]').val(),
          locationName = that.find('[data-location-name]').val();

      if (lat !== '' && lng !== '') {
        waypoints.push({latLng: L.latLng(lat, lng), name: locationName});
      };
    });

    // console.log(waypoints);

    var waypointsLength = waypoints.length;

    for (var i = 0; i < 1; i++) {
      DOM.marker = new RMMarker(waypoints[i].latLng, waypoints[i].name);
      // DOM.marker.addTo(DOM.locationLayer);
      DOM.marker.addTo(DOM.map);
    };

  };

  _init();
  _events();
});
